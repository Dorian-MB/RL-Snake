[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "rl-snake"
version = "1.0.0"
description = "Reinforcement Learning Snake Game Implementation"
authors = [
    {name = "Dorian", email = "your.email@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["reinforcement-learning", "snake-game", "rl", "ai", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Games/Entertainment",
]

dependencies = [
    "stable-baselines3>=2.0.0",
    "gymnasium>=0.28.0",
    "pygame>=2.1.0",
    "numpy>=1.21.0",
    "torch>=1.12.0",
    "tensorboard>=2.10.0",
    "colorama>=0.4.4",
    "imageio>=2.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
]

docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.scripts]
rl-snake-train = "rl_snake.scripts.train:main"
rl-snake-play = "rl_snake.scripts.play_agents:main"
rl-play-snake = "rl_snake.scripts.play_snake:main"
rl-snake-evaluate = "rl_snake.scripts.evaluate:main"

[project.urls]
Homepage = "https://github.com/Dorian-MB/RL-Snake"
Repository = "https://github.com/Dorian-MB/RL-Snake.git"
Issues = "https://github.com/Dorian-MB/RL-Snake/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"rl_snake" = ["*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["rl_snake"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
